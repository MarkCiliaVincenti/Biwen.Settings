@using Biwen.Settings;
@using Microsoft.Extensions.Options;
@using System.Text.Json;
@inject IOptions<SettingOptions> SettingOptions;

@{
    var setting = ViewBag.Setting as Biwen.Settings.Domains.Setting;
    var settingValues = ViewBag.SettingValues as List<(string, string?, string?)>;
    //Layout = SettingOptions.Value.Layout;
    ViewData["Title"] = $"Edit-{setting!.SettingName}";
}

@using (Html.BeginForm())
{
    <h3 class="settingH3">@(setting!.SettingName)</h3>
    <h5 class="settingH5">@(setting!.Description)</h5>
    @Html.ValidationSummary()
    foreach (var kv in settingValues!)
    {
        <div class="settingRow">
            <div class="settingLabel editor-label">
                <label for="@kv.Item1">@(kv.Item1)</label>
                @Html.ValidationMessage(kv.Item1)
            </div>
            <div class="settingEditor editor-field" title="@kv.Item2">
                @Html.TextBox(kv.Item1, kv.Item3, new { id = kv.Item1,placeholder= kv.Item2 , @class = "form-control" })
            </div>
        </div>
    }

    <button class="settingButton btn btn-primary btn-block" onclick="@SettingOptions.Value.EditorOption.EditorOnclick">@SettingOptions.Value.EditorOption.EdtiorConfirmButtonText</button>
}
