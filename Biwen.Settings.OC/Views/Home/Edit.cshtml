@using Biwen.Settings;
@using Microsoft.Extensions.Options;
@using System.Text.Json;

@using Biwen.Settings.Controllers;


@inject IOptions<SettingOptions> SettingOptions;

@{
    var setting = ViewBag.Setting as Biwen.Settings.Domains.Setting;
    var settingValues = ViewBag.SettingValues as List<SettingViewModel>;
    //Layout = SettingOptions.Value.Layout;
    ViewData["Title"] = $"Edit-{setting!.SettingName}";
}

@using (Html.BeginForm())
{
                <h3 class="settingH3">@(setting!.SettingName)</h3>
                <h5 class="settingH5">@(setting!.Description)</h5>
    @Html.ValidationSummary()
    foreach (var vm in settingValues!)
    {
                                <div class="settingRow">
                                    <div class="settingLabel editor-label">
                                        <label for="@vm.Name">@(vm.Name)</label>
                @Html.ValidationMessage(vm.Name)
                                    </div>
                                    <div class="settingEditor editor-field" title="@vm.Description">
                @Html.TextBox(vm.Name, vm.Value, new { id = vm.Name, placeholder = (vm.Description ?? vm.Name), @class = "form-control" })
                                    </div>
                                </div>
    }

                <button class="settingButton btn btn-primary btn-block" onclick="@SettingOptions.Value.EditorOptions.EditorOnclick">@SettingOptions.Value.EditorOptions.EdtiorConfirmButtonText</button>
}
