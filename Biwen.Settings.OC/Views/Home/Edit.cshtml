@using Biwen.Settings;
@using Microsoft.Extensions.Options;
@using System.Text.Json;
@inject IOptions<SettingOptions> SettingOptions;

@{
    var setting = ViewBag.Setting as Biwen.Settings.Domains.Setting;
    var settingValues = ViewBag.SettingValues as List<(string Name, string? Description, string? Value)>;
    //Layout = SettingOptions.Value.Layout;
    ViewData["Title"] = $"Edit-{setting!.SettingName}";
}

@using (Html.BeginForm())
{
    <h3 class="settingH3">@(setting!.SettingName)</h3>
    <h5 class="settingH5">@(setting!.Description)</h5>
    @Html.ValidationSummary()
    foreach (var kv in settingValues!)
    {
        <div class="settingRow">
            <div class="settingLabel editor-label">
                <label for="@kv.Name">@(kv.Name)</label>
                @Html.ValidationMessage(kv.Name)
            </div>
            <div class="settingEditor editor-field" title="@kv.Description">
                @Html.TextBox(kv.Name, kv.Value, new { id = kv.Name, placeholder = kv.Description, @class = "form-control" })
            </div>
        </div>
    }

    <button class="settingButton btn btn-primary btn-block" onclick="@SettingOptions.Value.EditorOptions.EditorOnclick">@SettingOptions.Value.EditorOptions.EdtiorConfirmButtonText</button>
}
